{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Web socket request panel\n\nContains an UI and logic to make a connection to a websocket server and\nsend and receive messages.\n\n### Example\n\n```html\n<websocket-request messages=\"{{messages}}\" connected=\"{{connected}}\">\n</websocket-request>\n```\n\n## Required dependency\n\nThe element requires to `arc-models/websocket-url-history-model.html`\ncomponent to be placed in the DOM. It can be any other component that\nhandles `websocket-url-history-read`, `websocket-url-history-changed`\nand `websocket-url-history-query` events.\n\n### Styling\n\n`<websocket-request>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--websocket-request` | Mixin applied to the element | `{}`\n`--websocket-request-url-input` | Mixin applied to the URL input | `{}`\n`--websocket-request-connection-info` | Applied to the label when connected | `{}`\n`--websocket-request-connected-url-label` | Mixin applied to the URL label when connected | `{}`\n`--websocket-request-file-drop` | Mixin applied to the `<file-drop>` element | `{}`",
      "summary": "",
      "path": "websocket-request.js",
      "properties": [
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Remote URL to connect to",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 6
            },
            "end": {
              "line": 296,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_urlChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "connecting",
          "type": "boolean | null | undefined",
          "description": "True if the `web-socket` is connecting to the remote server.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 6
            },
            "end": {
              "line": 304,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "connected",
          "type": "boolean | null | undefined",
          "description": "True if the socket is connected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "retrying",
          "type": "boolean | null | undefined",
          "description": "Tru if the socket is disconnected (`connect` is false) but the component is trying to\nreconnect.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 318,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autoReconnect",
          "type": "boolean | null | undefined",
          "description": "If set the socket will automatically retry the connection when it was\nclosed by any reason.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 323,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "connectDisabled",
          "type": "boolean | null | undefined",
          "description": "Computed value, true when the connect button is disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 331,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "selectedTab",
          "type": "number | null | undefined",
          "description": "Currently opened request input tab.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 338,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "urlInput",
          "type": "Object | null | undefined",
          "description": "An input filed for the URL value.\nIt is used by `paper-autocomplete` element as an input target.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 346,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "message",
          "type": "string | null | undefined",
          "description": "A message to be send to the server when connected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 6
            },
            "end": {
              "line": 348,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "file",
          "type": "Object | null | undefined",
          "description": "A file object added to the file editor",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 350,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "hasFile",
          "type": "boolean | null | undefined",
          "description": "Computed value, true when the file is set",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 355,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "messages",
          "type": "Array | null | undefined",
          "description": "List of messages sent and received from the server.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 6
            },
            "end": {
              "line": 362,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "messageSendEnabled",
          "type": "boolean | null | undefined",
          "description": "Computed value, true when send message button is enabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 364,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "suggesionsOpened",
          "type": "boolean | null | undefined",
          "description": "True if URL suggestions are opened",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 6
            },
            "end": {
              "line": 370,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 2
            },
            "end": {
              "line": 380,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onDisconnected",
          "description": "Called when the socket has been disconnected",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 2
            },
            "end": {
              "line": 389,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onConnected",
          "description": "Called when tghe socket has been connected.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 2
            },
            "end": {
              "line": 398,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onError",
          "description": "Handler for the `<web-socket>` error event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 404,
              "column": 2
            },
            "end": {
              "line": 409,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_urlChanged",
          "description": "Called when the remote URL has changed.\nSets a state of `connectDisabled` attribute.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 414,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_urlKeyDown",
          "description": "Connects on enter.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 2
            },
            "end": {
              "line": 426,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connect",
          "description": "Connects to the remove machine.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 2
            },
            "end": {
              "line": 443,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnect",
          "description": "Disconnects from the remote machine.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 447,
              "column": 2
            },
            "end": {
              "line": 449,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatch",
          "description": "Dispatches a CustomEvent of a `type` with `detail` object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 456,
              "column": 2
            },
            "end": {
              "line": 465,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "Object",
              "description": "Object to attach to the event"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_dispatchReadHistory",
          "description": "Dispatches `websocket-url-history-read` event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 2
            },
            "end": {
              "line": 475,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "History object ID."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_dispatchUpdateHistory",
          "description": "Dispatches `websocket-url-history-read` event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 481,
              "column": 2
            },
            "end": {
              "line": 485,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "History object to update."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_dispatchQueryHistory",
          "description": "Dispatches `websocket-url-history-read` event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 491,
              "column": 2
            },
            "end": {
              "line": 495,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "q",
              "type": "String",
              "description": "Value for query event (an URL)."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_dispatchGaEvent",
          "description": "Dispatches GA event.\nThe event's category is `Web sockets`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 2
            },
            "end": {
              "line": 508,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "action",
              "type": "String",
              "description": "Event action."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_updateUrlHistory",
          "description": "Updates the URL object in the history datastore.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 514,
              "column": 2
            },
            "end": {
              "line": 522,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "An URL to store"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_processUrlHistoryUpdateResponse",
          "description": "Processes datastore response about the URL. If exists it updates\nthe object or creates new otherwise.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 530,
              "column": 2
            },
            "end": {
              "line": 547,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc",
              "type": "Object",
              "description": "Retreived from the data store object. Can be not set if the object do not exists."
            },
            {
              "name": "url",
              "type": "String",
              "description": "Request URL to store."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_queryUrlHistory",
          "description": "Queries for the list of history URLs for autocomplete function.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 553,
              "column": 2
            },
            "end": {
              "line": 568,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent",
              "description": "Suggestion request event from autocomplete"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_onSuggestionSelected",
          "description": "Connects to the server when URL suggestion has been selected.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 570,
              "column": 2
            },
            "end": {
              "line": 572,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_messageKeydown",
          "description": "Sends the message to the server when the user pressed ctrl + enter\nwhile typing in the input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 579,
              "column": 2
            },
            "end": {
              "line": 585,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "KeyboardEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_sendMessage",
          "description": "Send a string message.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 589,
              "column": 2
            },
            "end": {
              "line": 596,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fileAccepted",
          "description": "Handler for the `file-accepted` event sent by the `file-drop` element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 600,
              "column": 2
            },
            "end": {
              "line": 602,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_sendFileMessage",
          "description": "Send a file message",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 606,
              "column": 2
            },
            "end": {
              "line": 615,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_send",
          "description": "Sends a message to opened socket.\nAlso appends a message to the list of messages.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 622,
              "column": 2
            },
            "end": {
              "line": 638,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "type": "(String | Blob)",
              "description": "Data to send."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_messageReceived",
          "description": "Message received handler.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 644,
              "column": 2
            },
            "end": {
              "line": 654,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeButtonVisible",
          "description": "Compute if send button should be visible.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 661,
              "column": 2
            },
            "end": {
              "line": 663,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj",
              "type": "Any",
              "description": "If anything is passed to the function it should return true."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if file is available."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 140,
          "column": 7
        },
        "end": {
          "line": 664,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "ApiElements.WebsocketRequest",
      "attributes": [
        {
          "name": "url",
          "description": "Remote URL to connect to",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 6
            },
            "end": {
              "line": 296,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "connecting",
          "description": "True if the `web-socket` is connecting to the remote server.",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 6
            },
            "end": {
              "line": 304,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "connected",
          "description": "True if the socket is connected.",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "retrying",
          "description": "Tru if the socket is disconnected (`connect` is false) but the component is trying to\nreconnect.",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 318,
              "column": 23
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "auto-reconnect",
          "description": "If set the socket will automatically retry the connection when it was\nclosed by any reason.",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 323,
              "column": 28
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "connect-disabled",
          "description": "Computed value, true when the connect button is disabled.",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 331,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-tab",
          "description": "Currently opened request input tab.",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 338,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "url-input",
          "description": "An input filed for the URL value.\nIt is used by `paper-autocomplete` element as an input target.",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 346,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "message",
          "description": "A message to be send to the server when connected.",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 6
            },
            "end": {
              "line": 348,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "file",
          "description": "A file object added to the file editor",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 350,
              "column": 18
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "has-file",
          "description": "Computed value, true when the file is set",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 355,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "messages",
          "description": "List of messages sent and received from the server.",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 6
            },
            "end": {
              "line": 362,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "message-send-enabled",
          "description": "Computed value, true when send message button is enabled",
          "sourceRange": {
            "start": {
              "line": 364,
              "column": 6
            },
            "end": {
              "line": 368,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "suggesions-opened",
          "description": "True if URL suggestions are opened",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 6
            },
            "end": {
              "line": 370,
              "column": 31
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "url-changed",
          "description": "Fired when the `url` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "connecting-changed",
          "description": "Fired when the `connecting` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "connected-changed",
          "description": "Fired when the `connected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "messages-changed",
          "description": "Fired when the `messages` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "websocket-request"
    }
  ],
  "classes": [
    {
      "description": "A model for a single socket message.",
      "summary": "",
      "path": "websocket-request.js",
      "properties": [
        {
          "name": "isBinary",
          "type": "Boolean",
          "description": "If the message is a binnary data this will be set to true.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 17
            }
          },
          "metadata": {},
          "defaultValue": "undefined"
        },
        {
          "name": "message",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 2
            },
            "end": {
              "line": 73,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "time",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "toJSON",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 7
        },
        "end": {
          "line": 101,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "WebSocketMessage"
    }
  ]
}
